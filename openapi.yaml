openapi: 3.0.1
info:
  title: Conversão de temperatura
  description: API de conversão de temperatura
  contact:
    email: bruno.botlho.br@gmail.com
  version: 1.0.1
servers:
- url: /
paths:
  /fahrenheit/{valor}/celsius:
    get:
      description: Converte de Fahrenheit para Celsius
      parameters:
      - name: valor
        in: path
        description: Valor que será convertido
        required: true
        schema:
          type: number
      responses:
        200:
          description: Resultado da conversão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Temperatura'
        400:
          description: Bad Input Parameter
          content: {}
  /celsius/{valor}/fahrenheit:
    get:
      description: Converte de Celsius para Fahrenheit
      parameters:
      - name: valor
        in: path
        description: Valor que será convertido
        required: true
        schema:
          type: number
      responses:
        200:
          description: Resultado da conversão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Temperatura'
        400:
          description: Bad Input Parameter
          content: {}
  /echo/{msg}:
    get:
      description: Return a message
      parameters:
      - name: msg
        in: path
        description: Mensagem que será retornada
        required: true
        schema:
          type: string
      responses:
        200:
          description: Retorno
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/msg'
        400:
          description: Bad Input Parameter
          content: {}
  /stress/{elemento}/tempostress/{tempo_stress}/intervalo/{intervalo}/ciclos/{ciclos}:
    put:
      description: Used to create scheduled stress tests on a given target. Use cases
        include testing program performance under max CPU or Memory load, testing
        recovery from max load, and testing virtual autoscaling features such as the
        Kubernetes horizontal pod autoscaler.
      parameters:
      - name: elemento
        in: path
        description: The type of resource to stress (memory | cpu)
        required: true
        schema:
          type: string
      - name: tempo_stress
        in: path
        description: The length of the stress period in seconds
        required: true
        schema:
          type: number
      - name: intervalo
        in: path
        description: he length of the relief period in seconds
        required: true
        schema:
          type: number
      - name: ciclos
        in: path
        description: The number of cycles to complete before NodeHog exits (1 cycle
          = 1 lifespan + 1 deathspan)
        required: true
        schema:
          type: number
      responses:
        200:
          description: Retorno
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/msg'
        400:
          description: Bad Input Parameter
          content: {}
components:
  schemas:
    Temperatura:
      required:
      - valor
      type: object
      properties:
        valor:
          type: number
          example: 500.0
    msg:
      type: object
      properties:
        valor:
          type: string
          example: Azeitona
    elemento:
      type: object
      properties:
        valor:
          type: string
          example: cpu
    tempo_stress:
      type: object
      properties:
        valor:
          type: number
          example: 60.0
    intervalo:
      type: object
      properties:
        valor:
          type: number
          example: 1.0
    ciclos:
      type: object
      properties:
        valor:
          type: number
          example: 2.0
