swagger: "2.0"
info:
  description: "API de conversão de temperatura"
  version: "1.0.1"
  title: "Conversão de temperatura"
  contact:
    email: "bruno.botlho.br@gmail.com"
paths:
  /fahrenheit/{valor}/celsius:
    get:
      description: "Converte de Fahrenheit para Celsius"
      produces:
      - "application/json"
      parameters:
      - name: "valor"
        in: "path"
        description: "Valor que será convertido"
        required: true
        type: "number"
      responses:
        "200":
          description: "Resultado da conversão"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Temperatura"
        "400":
          description: "Bad Input Parameter"

  /celsius/{valor}/fahrenheit:
    get:
      description: "Converte de Celsius para Fahrenheit"
      produces:
      - "application/json"
      parameters:
      - name: "valor"
        in: "path"
        description: "Valor que será convertido"
        required: true
        type: "number"
      responses:
        "200":
          description: "Resultado da conversão"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Temperatura"
        "400":
          description: "Bad Input Parameter"

  /echo/{msg}:
    get:
      description: "Return a message"
      produces:
      - "application/json"
      parameters:
      - name: "msg"
        in: "path"
        description: "Mensagem que será retornada"
        required: true
        type: "string"
      responses:
        "200":
          description: "Retorno"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/msg"
        "400":
          description: "Bad Input Parameter"

  /stress/{elemento}/tempostress/{tempo_stress}/intervalo/{intervalo}/ciclos/{ciclos}:
    put:
      description: "Used to create scheduled stress tests on a given target. Use cases include testing program performance under max CPU or Memory load, testing recovery from max load, and testing virtual autoscaling features such as the Kubernetes horizontal pod autoscaler."
      produces:
      - "application/json"
      parameters:
      - name: "elemento"
        in: "path"
        description: "The type of resource to stress (memory | cpu)"
        required: true
        type: "string"
      - name: "tempo_stress"
        in: "path"
        description: "The length of the stress period in seconds"
        required: true
        type: "number"
      - name: "intervalo"
        in: "path"
        description: "he length of the relief period in seconds"
        required: true
        type: "number"
      - name: "ciclos"
        in: "path"
        description: "The number of cycles to complete before NodeHog exits (1 cycle = 1 lifespan + 1 deathspan)"
        required: true
        type: "number"     
      responses:
        "200":
          description: "Retorno"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/msg"
        "400":
          description: "Bad Input Parameter"

definitions:
  Temperatura:
    type: "object"
    required:
    - "valor"
    properties:
      valor:
        type: "number"
        example: 500.0
  msg:
    type: "object"
    required:
    - "msg"
    properties:
      valor:
        type: "string"
        example: Azeitona
  elemento:
    type: "object"
    required:
    - "msg"
    properties:
      valor:
        type: "string"
        example: cpu
  tempo_stress:
    type: "object"
    required:
    - "msg"
    properties:
      valor:
        type: "number"
        example: 60
  intervalo:
    type: "object"
    required:
    - "msg"
    properties:
      valor:
        type: "number"
        example: 1
  ciclos:
    type: "object"
    required:
    - "msg"
    properties:
      valor:
        type: "number"
        example: 2