# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
    
      - name: Download Code
        uses: actions/checkout@v2
      
      - name: Docker Login
        uses: docker/login-action@v1.10.0      
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASS }}
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.6.1
        with: 
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            brunobotelhobr/api_conversao:latest
            brunobotelhobr/api_conversao:${{ github.run_number }}

      - name: Trivy Vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'brunobotelhobr/api_conversao:latest'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          exit-code: '1'
          ignore-unfixed: false

      - name: Upload Image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
           
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - uses: actions/checkout@v2
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1.1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S }}
      - name: Deploy K8s
        uses: Azure/k8s-deploy@v1
        with:        
          manifests: |
            k8s/deployment.yaml
